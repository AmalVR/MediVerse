// This file is auto-generated by ZenStack from schema.zmodel
// Do not edit manually

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AnatomyPart {
  id          String            @id @default(cuid())
  partId      String            @unique
  name        String
  latinName   String?
  system      AnatomySystem
  parentId    String?
  parent      AnatomyPart?      @relation("PartHierarchy", fields: [parentId], references: [id])
  children    AnatomyPart[]     @relation("PartHierarchy")
  modelPath   String?
  lodLevels   Json?
  boundingBox Json?
  synonyms    AnatomySynonym[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@index([system])
  @@index([partId])
}

model AnatomySynonym {
  id       String      @id @default(cuid())
  partId   String
  part     AnatomyPart @relation(fields: [partId], references: [id], onDelete: Cascade)
  synonym  String
  language String      @default("en")
  priority Int         @default(0)

  @@unique([partId, synonym, language])
  @@index([synonym])
}

model TeachingSession {
  id              String           @id @default(cuid())
  code            String           @unique
  teacherId       String
  title           String
  isActive        Boolean          @default(true)
  highlightedPart String?
  cameraPosition  Json?
  modelRotation   Json?
  visibleSystems  String[]         @default([])
  slicePosition   Json?
  notes           SessionNote[]
  students        SessionStudent[]
  commands        VoiceCommand[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  endedAt         DateTime?

  @@index([code])
  @@index([isActive])
}

model SessionStudent {
  id        String          @id @default(cuid())
  sessionId String
  session   TeachingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  studentId String
  joinedAt  DateTime        @default(now())

  @@unique([sessionId, studentId])
}

model SessionNote {
  id        String          @id @default(cuid())
  sessionId String
  session   TeachingSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  studentId String
  content   String          @db.Text
  timestamp DateTime        @default(now())

  @@index([sessionId, studentId])
}

model VoiceCommand {
  id         String           @id @default(cuid())
  sessionId  String?
  session    TeachingSession? @relation(fields: [sessionId], references: [id], onDelete: SetNull)
  transcript String           @db.Text
  intent     String?
  action     String?
  target     String?
  confidence Float?
  success    Boolean          @default(true)
  errorMsg   String?
  userId     String?
  createdAt  DateTime         @default(now())

  @@index([sessionId])
  @@index([createdAt])
}

enum AnatomySystem {
  SKELETAL
  MUSCULAR
  NERVOUS
  CARDIOVASCULAR
  RESPIRATORY
  DIGESTIVE
  URINARY
  REPRODUCTIVE
  ENDOCRINE
  LYMPHATIC
  INTEGUMENTARY
}

enum CommandAction {
  SHOW
  HIDE
  HIGHLIGHT
  ISOLATE
  ROTATE
  ZOOM
  SLICE
  RESET
  SYSTEM_TOGGLE
}

